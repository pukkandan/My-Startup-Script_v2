/*                                                                  NOTES
All directives(that are settings) and many commands appear here irrespective of its need
The directives/commands that are default are commented by ";;" , those not needed by ";;;" and those not desired by ";~ "
=======================================================================================================================
*/

ReloadAsAdmin_Task()

A_ScriptName:=path(A_ScriptName).NameNoExt ; Name of file without extension
global A_ScriptPID := ProcessExist()        ; Script's PID


global A_hookTimeOut:=regRead("HKEY_CURRENT_USER\Control Panel\Desktop", "LowLevelHooksTimeout")
A_hookTimeOut:=A_hookTimeOut?A_hookTimeOut:300

#IfTimeout SCR_hookTimeOut//3 ;A timeout is implemented to prevent long-running expressions from stalling keyboard input processing. If the timeout value is exceeded, the expression continues to evaluate, but the keyboard hook continues as if the expression had already returned false.
DetectHiddenWindows(False)      ;Detect Windows that are hidden? Recommended to set true only when needed
;;#ClipboardTimeout 1000        ;Time before unresponsive clipboard timesout and gives error
;;;#ErrorStdOut                 ;Pipes errors to stdout.
;;#HotkeyInterval 2000          ;Interval for #MaxHotkeysPerInterval
;;;#HotkeyModifierTimeout 0     ;Affects the behavior of hotkey modifiers. Not needed when #UseHook is used
;~#Hotstring NoMouse            ;Mouse is not used to reset hotstrings
#Hotstring EndChars »           ;Hotstrings are triggered by "»" (send by "CapsLock" hotkey)
#Hotstring ? B C K0 Z O         ;Hotstring global settings
;;;#IfTimeOut 1000              ;#If* timeout
;;;#InputLevel 0                ;Hotkeys are unable to trigger each other. Not needed when using Hook
;;SendLevel 0                   ;Keystrokes generated by this script doesnot trigger another AHK script
#InstallKeybdHook               ;Installs Keyboard hook
#InstallMouseHook               ;Installs Mouse hook
#KeyHistory 100                 ;maximum number of keyboard and mouse events displayed by the KeyHistory window.
;;#LTrim Off                    ;Donot left-trim Continuation sections
#MaxHotkeysPerInterval 200      ;Rate of hotkey activations beyond which a warning dialog will be displayed
#MaxThreads 255                 ;Allows for huge number of pseudo-threads to run simultaneously. Disable this if the script uses too much resources
;;#MaxThreadsBuffer Off         ;Do not buffer hotkeys beyond its thread capacity
#MaxThreadsPerHotkey 1          ;Hotkey can not be launched when it is already running
Thread("Interrupt", 50, 1000)   ;Minimum time for interupt
;;#MenuMaskKey {Ctrl}           ;Mask for #!^ keys. Use another key if this causes problems
;~ #NoTrayIcon                  ;Hides tray icon
#Persistent                     ;Keeps a script permanently running
#SingleInstance Force           ;Replaces old instance with new one
#UseHook                        ;For machine level hotkeys. Removes need to use $ in hotkeys
; #Warn All                     ;Shows warnings. Use for debugging only
;;;#WinActivateForce            ;Forcefully activates windows. Generally not needed
;;SendMode("Input")             ;How the script sends simulated keys. Recommended due to its superior speed and reliability.
;;SetWorkingDir(A_ScriptDir)    ;Set script path as working directory. Ensures a consistent starting directory.
ProcessSetPriority("Realtime")  ;Runs Script at High process priority for best performance
;;;SetKeyDelay(0, 0)            ;Smallest possible delay for sendevent
;;;SetKeyDelay(0, 0, "Play")    ;Smallest possible delay for sendplay
;;;SetMouseDelay(0)             ;Smallest possible delay for sendevent
;;;SetMouseDelay(0,"Play")      ;Smallest possible delay for sendplay
;;;SetDefaultMouseSpeed(0)      ;Move the mouse instantly for sendEvent
SetWinDelay(0)                  ;Smallest possible delay
SetControlDelay(0)              ;Smallest possible delay
;;StringCaseSense("Off")        ;Strings are not case-sensitive
;;SetTitleMatchMode(2)          ;A window's title can contain WinTitle anywhere inside it to be a match
;;SetTitleMatchMode("Fast")     ;Uses fast method to match WinTitle
BlockInput("Mouse")             ;Keyboard/mouse is blocked during Click, MouseMove, MouseClick, or MouseClickDrag
A_CoordModeToolTip:= "Screen"   ;Tooltip co-ords are specified in global co-ords
A_CoordModePixel  := "Screen"   ;Co-ords for image/pixelSearch are specified in global co-ords
A_CoordModeMouse  := "Screen"   ;Mouse co-ords are specified in global co-ords
A_CoordModeCaret  := "Screen"   ;A_CaretX/Y are specified in global co-ords
A_CoordModeMenu   := "Screen"   ;Co-ords for "Menu, Show" are specified in global co-ords